name: Docker

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'
    paths:
      - .github/workflows/docker.yml
      - '*.Dockerfile'
      - requirements.txt
      - docker-bake.hcl
      - "matrix.json"


jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      built_matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:  
      - name: Checkout
        uses: actions/checkout@v3

      - name: Load JSON to matrix
        id: set-matrix
        run: |
          output=$(cat ./matrix.json)
          echo $output | jq
          output="${output//'%'/'%25'}"
          output="${output//$'\n'/'%0A'}"
          output="${output//$'\r'/'%0D'}"
          echo "::set-output name=matrix::$output"
         

  Bake:
    needs: matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.matrix.outputs.built_matrix) }}
      # matrix:
      #   ${{ include }}: ${{ fromJson(needs.matrix.outputs.built_matrix) }}
      #   exclude:
      #     - bake-target: alpine
      #       flask: 2.1.0

    steps:
    - name: Login to Docker
      uses: docker/login-action@v1
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Login To GitHub
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}

    - name: Login To GitLab
      uses: docker/login-action@v1
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      with:
        registry: registry.gitlab.com
        username: ${{ secrets.GITLAB_USER }}
        password: ${{ secrets.GITLAB_TOKEN }}

    - name: Docker Meta
      id: meta
      uses: docker/metadata-action@v3.6.2
      with:
        flavor: |
          latest=false
        images: cyb3rjak3/pypy-flask,ghcr.io/cyb3r-jak3/pypy-flask,registry.gitlab.com/cyb3r-jak3/pypy-flask
        tags: |
          type=raw,value=${{ matrix.bake-target }}-${{ matrix.flask }}-${{ matrix.gunicorn }}-${{ matrix.gevent }}
        labels: |
          org.label-schema.vcs-url=https://github.com/Cyb3r-Jak3/pypy-flask.git
          org.label-schema.schema-version=1.0.0-rc1
          maintainer=Cyb3r Jak3 jake@jwhite.network
          org.opencontainers.image.vendor=cyb3rjak3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1.2.0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1.6.0

    - name: Checkout
      uses: actions/checkout@v3

    - name: Build
      uses: docker/bake-action@v1.7.0
      with:
        files: |
          ./docker-bake.hcl
          ${{ steps.meta.outputs.bake-file }}
        targets: ${{ matrix.bake-target }}-release
        push: ${{ startsWith(github.ref, 'refs/tags/v') }}
        pull: true
        set: |
          ${{ matrix.bake-target }}-release.args.FLASK_VERSION=${{ matrix.flask }}
          ${{ matrix.bake-target }}-release.args.GUNICORN_VERSION=${{ matrix.gunicorn }}
          ${{ matrix.bake-target }}-release.args.GEVENT_VERSION=${{ matrix.gevent }}
          ${{ matrix.bake-target }}-release.cache-from=ghcr.io/cyb3r-jak3/pypy-flask-cache:${{ matrix.bake-target }}-${{ matrix.flask }}-${{ matrix.gunicorn }}-${{ matrix.gevent }}
          ${{ matrix.bake-target }}-release.cache-to=type=registry,mode=max,ref=ghcr.io/cyb3r-jak3/pypy-flask-cache:${{ matrix.bake-target }}-${{ matrix.flask }}-${{ matrix.gunicorn }}-${{ matrix.gevent }}

  Bake_Latest:
    needs: matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        bake-target: ['alpine', 'slim']

    steps:
    - name: Login to Docker
      uses: docker/login-action@v1
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Login To GitHub
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}

    - name: Login To GitLab
      uses: docker/login-action@v1
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      with:
        registry: registry.gitlab.com
        username: ${{ secrets.GITLAB_USER }}
        password: ${{ secrets.GITLAB_TOKEN }}

    - name: Docker Meta
      id: meta
      uses: docker/metadata-action@v3.6.2
      with:
        flavor: |
          latest=false
        images: cyb3rjak3/pypy-flask,ghcr.io/cyb3r-jak3/pypy-flask,registry.gitlab.com/cyb3r-jak3/pypy-flask
        tags: |
          type=raw,value=${{ matrix.bake-target }}
        labels: |
          org.label-schema.vcs-url=https://github.com/Cyb3r-Jak3/pypy-flask.git
          org.label-schema.schema-version=1.0.0-rc1
          maintainer=Cyb3r Jak3 jake@jwhite.network
          org.opencontainers.image.vendor=cyb3rjak3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1.2.0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1.6.0

    - name: Checkout
      uses: actions/checkout@v3

    - name: Build
      uses: docker/bake-action@v1.7.0
      with:
        files: |
          ./docker-bake.hcl
          ${{ steps.meta.outputs.bake-file }}
        targets: ${{ matrix.bake-target }}-release
        push: ${{ startsWith(github.ref, 'refs/tags/v') }}
        pull: true
        set: |
          ${{ matrix.bake-target }}-release.cache-from=ghcr.io/cyb3r-jak3/pypy-flask-cache:${{ matrix.bake-target }}
          ${{ matrix.bake-target }}-release.cache-to=type=registry,mode=max,ref=ghcr.io/cyb3r-jak3/pypy-flask-cache:${{ matrix.bake-target }}